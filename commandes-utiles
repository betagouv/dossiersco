# Active record

## Migrations et données

rake db:create_migration NAME=create_dossier_eleves_table
rake db:migrate
rake db:seed
rake db:rollback

rake traiter_imports

## Créer le hash d'un mot de passe

irb:> require 'bcrypt'
irb:> BCrypt::Password.create('motDePasse')

## Entre dans docker pour lancer rake

docker-compose exec app bash
docker-compose up --build --force-recreat

## Consulter les logs par service (désentrelacer les logs)

docker-compose logs -f app

# Posgres

psql -U dossiersco

Sélectionne la base dossiersco :

\c dossiersco;

Puis montre les tables (dt pour Display Tables) :

\dt

postgres=# ALTER DATABASE dossiersco OWNER TO pblayo;
postgres=# ALTER USER dossiersco WITH PASSWORD 'new_password';

## Afficher sur plusieurs lignes

\x on

## Donne des droits

$ sudo -u postgres -i
postgres@host:~$ psql

postgres=# ALTER USER new_user CREATEDB;


# Sélectionne une version particulière de ruby

rbenv install 2.5.0
rbenv local 2.2.4
rbenv rehash (pour rendre disponibles de nouvelles commandes)

# Heroku

git remote add heroku https://git.heroku.com/dossiersco.git
git push heroku master # pour pousser en prod
heroku open
heroku logs -t
heroku run rake db:migrate
heroku run rake stats
heroku run irb --noreadline

heroku run irb -a dossiersco-staging

En local :

heroku run bash
heroku psql

# Heroku postgres

heroku pg:index_usage
(nécessite heroku plugins:install heroku-pg-extras)

# IRB

# Supprimer les données d'un établissement
malraux = DossierEleve.where(etablissement_id: 227)
malraux.each do |dossier| dossier.resp_legal.each do |resp| resp.destroy end end
malraux.each do |dossier| dossier.eleve.option = [] end
eleves_malraux = malraux.collect(&:eleve)
malraux.each do |dossier| dossier.destroy end
eleves_malraux.each do |eleve| eleve.destroy end
